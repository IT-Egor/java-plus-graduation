grpc:
  server:
    port: 0

logging:
  level:
    org.springframework.web: INFO
    org.springframework.orm.jpa: INFO
    org.springframework.transaction: INFO
    org.springframework.transaction.interceptor: INFO
    org.springframework.orm.jpa.JpaTransactionManager: INFO
    org.zalando.logbook: TRACE

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://analyzer-db:5432/analyzer-db
    username: adb
    password: password
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: always
  hibernate:
    jdbc:
      time_zone: UTC

logbook:
  format:
    style: http

app:
  kafka:
    bootstrap-servers: kafka:29092
    consumer:
      similarity:
        properties:
          "bootstrap.servers": ${app.kafka.bootstrap-servers}
          "enable.auto.commit": false
          "client.id": stats.similarity.analyzer
          "group.id": stats.similarity.analyzer
          "key.deserializer": org.apache.kafka.common.serialization.StringDeserializer
          "value.deserializer": ru.practicum.explore_with_me.deserialization.EventSimilarityDeserializer
        topics:
          - stats.events-similarity.v1
        poll-timeout: 1000ms

      user-action:
        properties:
          "bootstrap.servers": ${app.kafka.bootstrap-servers}
          "enable.auto.commit": false
          "client.id": stats.user-actions.analyzer
          "group.id": stats.user-actions.analyzer
          "key.deserializer": org.apache.kafka.common.serialization.LongDeserializer
          "value.deserializer": ru.practicum.explore_with_me.deserialization.UserActionDeserializer
        topics:
          - stats.user-actions.v1
        poll-timeout: 1000ms

  user-action:
    weights:
      view: 0.4
      register: 0.8
      like: 1.0