services:
  discovery-server:
    image: discovery-server
    container_name: discovery-server
    build:
      context: .
      dockerfile: infra/discovery-server/Dockerfile
    ports:
      - "8761:8761"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8761/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5

  config-server:
    image: config-server
    container_name: config-server
    build:
      context: .
      dockerfile: infra/config-server/Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery-server:8761/eureka/apps/CONFIG-SERVER || exit 1
      interval: 30s
      timeout: 5s
      start_period: 60s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy

  gateway-server:
    image: gateway-server
    container_name: gateway-server
    build:
      context: .
      dockerfile: infra/gateway-server/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy

  user-service:
    image: user-service
    container_name: user-service
    build:
      context: .
      dockerfile: core/user-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery-server:8761/eureka/apps/USER-SERVICE || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
      user-db:
        condition: service_healthy

  event-service:
    image: event-service
    container_name: event-service
    build:
      context: .
      dockerfile: core/event-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery-server:8761/eureka/apps/EVENT-SERVICE || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
      event-db:
        condition: service_healthy

  request-service:
    image: request-service
    container_name: request-service
    build:
      context: .
      dockerfile: core/request-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery-server:8761/eureka/apps/REQUEST-SERVICE || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
      request-db:
        condition: service_healthy

  comment-service:
    image: comment-service
    container_name: comment-service
    build:
      context: .
      dockerfile: core/comment-service/Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery-server:8761/eureka/apps/COMMENT-SERVICE || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
      comment-db:
        condition: service_healthy

  stats-server:
    image: stats-server
    container_name: stats-server
    build:
      context: .
      dockerfile: stats-service/stats-server/Dockerfile
    ports:
      - "9090:9090"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      stats-db:
        condition: service_healthy

  event-db:
    image: postgres:16.1
    container_name: event-db
    ports:
      - "6542:5432"
    environment:
      - POSTGRES_DB=event-db
      - POSTGRES_USER=edb
      - POSTGRES_PASSWORD=password
    volumes:
      - ./volumes/postgres/event_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  user-db:
    image: postgres:16.1
    container_name: user-db
    ports:
      - "6544:5432"
    environment:
      - POSTGRES_DB=user-db
      - POSTGRES_USER=udb
      - POSTGRES_PASSWORD=password
    volumes:
      - ./volumes/postgres/user_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  request-db:
    image: postgres:16.1
    container_name: request-db
    ports:
      - "6545:5432"
    environment:
      - POSTGRES_DB=request-db
      - POSTGRES_USER=rdb
      - POSTGRES_PASSWORD=password
    volumes:
      - ./volumes/postgres/request_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  comment-db:
    image: postgres:16.1
    container_name: comment-db
    ports:
      - "6546:5432"
    environment:
      - POSTGRES_DB=comment-db
      - POSTGRES_USER=cdb
      - POSTGRES_PASSWORD=password
    volumes:
      - ./volumes/postgres/comment_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  stats-db:
    image: postgres:16.1
    container_name: stats-db
    ports:
      - "6543:5432"
    volumes:
      - ./volumes/postgres/stats_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=stats-db
      - POSTGRES_USER=sdb
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10